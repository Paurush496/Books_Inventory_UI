{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\User\\\\books_inventory\\\\src\\\\BookCard.js\";\nimport React from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst url = \"http://localhost:8080/api/book/\";\nexport class BookCard extends React.Component {\n  constructor(props) {\n    super(props);\n\n    this.addToInventory = () => {\n      let book = {\n        bookId: this.props.bookId,\n        bookTitle: this.props.bookTitle,\n        authors: this.props.authors,\n        publishedDate: this.props.publishedDate,\n        noOfCopies: 1\n      };\n      fetch(url, {\n        method: 'POST',\n        headers: {\n          'Content-type': 'application/json'\n        },\n        body: JSON.stringify(book)\n      }).then(response => response.json()).then(data => {\n        this.setState({\n          items: data\n        });\n      });\n    };\n\n    this.generateCardFooter = isAddedToInventory => {\n      if (isAddedToInventory) {\n        return /*#__PURE__*/_jsxDEV(\"div\", {\n          id: \"card_footer\",\n          children: [/*#__PURE__*/_jsxDEV(\"button\", {\n            children: \" Save \"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 66,\n            columnNumber: 21\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            children: \" Out Of Stock \"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 67,\n            columnNumber: 21\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 65,\n          columnNumber: 17\n        }, this);\n      } else return /*#__PURE__*/_jsxDEV(\"div\", {\n        id: \"card_footer\",\n        children: [/*#__PURE__*/_jsxDEV(\"button\", {\n          children: \" Add to Inventory \"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 72,\n          columnNumber: 17\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: \" No copies currently in the Inventory \"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 73,\n          columnNumber: 17\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 71,\n        columnNumber: 13\n      }, this);\n    };\n\n    this.getAuthorsList = () => {\n      var authors = this.props.authors;\n\n      if (authors != null) {\n        return /*#__PURE__*/_jsxDEV(\"ul\", {\n          children: authors.map(author => {\n            return /*#__PURE__*/_jsxDEV(\"li\", {\n              children: author\n            }, author, false, {\n              fileName: _jsxFileName,\n              lineNumber: 83,\n              columnNumber: 28\n            }, this);\n          })\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 82,\n          columnNumber: 17\n        }, this);\n      }\n    };\n\n    this.state = {\n      noOfCopies: props.noOfCopies,\n      items: []\n    };\n    this.handleChange = this.handleChange.bind(this);\n  }\n\n  render() {\n    var book = this.props;\n    var isAddedToInventory = book.noOfCopies != 0;\n    var cardFooter = this.generateCardFooter(isAddedToInventory);\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"card_wrapper\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        id: \"card_body\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          id: \"book_info\",\n          children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n            id: \"header_container\",\n            children: book.bookTitle\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 23,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"h4\", {\n            children: \"Authors:\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 24,\n            columnNumber: 25\n          }, this), this.getAuthorsList(), /*#__PURE__*/_jsxDEV(\"h4\", {\n            children: \"Published Date:\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 26,\n            columnNumber: 25\n          }, this), book.publishedDate]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 22,\n          columnNumber: 21\n        }, this), isAddedToInventory && /*#__PURE__*/_jsxDEV(\"div\", {\n          id: \"inventory_status\",\n          children: [/*#__PURE__*/_jsxDEV(\"h4\", {\n            children: \"Inventory Copies\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 29,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            id: \"noOfCopies\",\n            type: \"number\",\n            value: this.state.noOfCopies,\n            onChange: this.handleChange,\n            min: \"1\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 30,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 28,\n          columnNumber: 44\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 21,\n        columnNumber: 17\n      }, this), cardFooter]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 20,\n      columnNumber: 13\n    }, this);\n  }\n\n  handleChange(e) {\n    this.setState({\n      noOfCopies: e.target.value\n    });\n  }\n\n}","map":{"version":3,"sources":["C:/Users/User/books_inventory/src/BookCard.js"],"names":["React","url","BookCard","Component","constructor","props","addToInventory","book","bookId","bookTitle","authors","publishedDate","noOfCopies","fetch","method","headers","body","JSON","stringify","then","response","json","data","setState","items","generateCardFooter","isAddedToInventory","getAuthorsList","map","author","state","handleChange","bind","render","cardFooter","e","target","value"],"mappings":"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","sourcesContent":["import React from 'react';\r\n\r\nconst url = \"http://localhost:8080/api/book/\"\r\n\r\nexport class BookCard extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = { \r\n            noOfCopies: props.noOfCopies,\r\n            items: []\r\n        }\r\n        this.handleChange = this.handleChange.bind(this);\r\n    }\r\n\r\n    render() {\r\n        var book = this.props;\r\n        var isAddedToInventory = book.noOfCopies != 0;\r\n        var cardFooter = this.generateCardFooter(isAddedToInventory);\r\n        return(\r\n            <div className=\"card_wrapper\">\r\n                <div id=\"card_body\">\r\n                    <div id=\"book_info\">\r\n                        <h3 id=\"header_container\">{book.bookTitle}</h3>\r\n                        <h4>Authors:</h4>\r\n                        {this.getAuthorsList()}\r\n                        <h4>Published Date:</h4>{book.publishedDate}\r\n                    </div>\r\n                    {isAddedToInventory && <div id=\"inventory_status\">\r\n                        <h4>Inventory Copies</h4>\r\n                        <input id=\"noOfCopies\" type=\"number\" value={this.state.noOfCopies} \r\n                            onChange={this.handleChange} min=\"1\" />\r\n                    </div>}\r\n                </div>\r\n                {cardFooter}\r\n            </div>\r\n        )\r\n    }\r\n\r\n    handleChange(e) {\r\n        this.setState({ noOfCopies: e.target.value });\r\n    }\r\n\r\n    addToInventory =()=> {\r\n        let book = {\r\n            bookId: this.props.bookId,\r\n            bookTitle: this.props.bookTitle,\r\n            authors: this.props.authors,\r\n            publishedDate: this.props.publishedDate,\r\n            noOfCopies: 1\r\n        }\r\n\r\n        fetch(url, {\r\n            method: 'POST',\r\n            headers: {'Content-type':'application/json'},\r\n            body: JSON.stringify(book)\r\n        }).then((response) => response.json())\r\n          .then((data) => {\r\n            this.setState({items: data})\r\n        });\r\n    }\r\n\r\n    generateCardFooter = (isAddedToInventory) => {\r\n        if(isAddedToInventory) {\r\n            return (\r\n                <div id=\"card_footer\">\r\n                    <button> Save </button>\r\n                    <button> Out Of Stock </button>   \r\n                </div>\r\n            )\r\n        } else return (\r\n            <div id=\"card_footer\">\r\n                <button> Add to Inventory </button>\r\n                <p> No copies currently in the Inventory </p>   \r\n            </div>\r\n        )\r\n    } \r\n\r\n    getAuthorsList=()=> {\r\n        var authors = this.props.authors;\r\n        if (authors != null) {\r\n            return(\r\n                <ul>{authors.map(author => {\r\n                    return <li key={author}>{author}</li>\r\n                    })}\r\n                </ul>\r\n            )\r\n        }\r\n    }\r\n}"]},"metadata":{},"sourceType":"module"}