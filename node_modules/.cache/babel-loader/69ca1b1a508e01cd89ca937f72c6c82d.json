{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\User\\\\books_inventory\\\\src\\\\BookCard.js\";\nimport React from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst url = \"https://book-store-service.herokuapp.com/api/book/\";\nexport class BookCard extends React.Component {\n  constructor(props) {\n    super(props);\n\n    this.generateCardFooter = isAddedToInventory => {\n      if (isAddedToInventory) {\n        return /*#__PURE__*/_jsxDEV(\"div\", {\n          id: \"card_footer\",\n          children: [/*#__PURE__*/_jsxDEV(\"button\", {\n            onClick: this.updateInventory,\n            children: \" Save \"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 43,\n            columnNumber: 21\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            onClick: this.props.removeFromInventory,\n            children: \" Remove All Copies \"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 44,\n            columnNumber: 21\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 42,\n          columnNumber: 17\n        }, this);\n      } else return /*#__PURE__*/_jsxDEV(\"div\", {\n        id: \"card_footer\",\n        children: [/*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: this.addToInventory,\n          children: \" Add to Inventory \"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 49,\n          columnNumber: 17\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: \" No copies currently in the Inventory \"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 50,\n          columnNumber: 17\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 48,\n        columnNumber: 13\n      }, this);\n    };\n\n    this.addToInventory = () => {\n      fetch(url, {\n        method: 'POST',\n        headers: {\n          'Content-type': 'application/json'\n        },\n        body: JSON.stringify(this.props)\n      }).then(response => response.json()).then(() => {\n        this.setState({\n          noOfCopies: 1\n        });\n      });\n    };\n\n    this.updateInventory = () => {\n      var book = this.props;\n      book.noOfCopies = this.state.noOfCopies;\n      fetch(url, {\n        method: 'PUT',\n        headers: {\n          'Content-type': 'application/json'\n        },\n        body: JSON.stringify(book)\n      }).then(response => response.json()).then(data => {\n        this.setState({\n          noOfCopies: data.noOfCopies\n        });\n      });\n    };\n\n    this.getAuthorsList = () => {\n      var authors = this.props.authors;\n\n      if (authors != null) {\n        return /*#__PURE__*/_jsxDEV(\"ul\", {\n          children: authors.map(author => {\n            return /*#__PURE__*/_jsxDEV(\"li\", {\n              children: author\n            }, author, false, {\n              fileName: _jsxFileName,\n              lineNumber: 86,\n              columnNumber: 28\n            }, this);\n          })\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 85,\n          columnNumber: 17\n        }, this);\n      }\n    };\n\n    this.state = {\n      noOfCopies: props.noOfCopies\n    };\n    this.handleChange = this.handleChange.bind(this);\n  }\n\n  render() {\n    var book = this.props;\n    var isAddedToInventory = this.state.noOfCopies != 0;\n    var cardFooter = this.generateCardFooter(isAddedToInventory);\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"card_wrapper\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        id: \"card_body\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          id: \"book_info\",\n          children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n            id: \"header_container\",\n            children: book.bookTitle\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 22,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"h4\", {\n            children: \"Authors:\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 23,\n            columnNumber: 25\n          }, this), this.getAuthorsList(), /*#__PURE__*/_jsxDEV(\"h4\", {\n            children: \"Published Date:\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 25,\n            columnNumber: 25\n          }, this), book.publishedDate]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 21,\n          columnNumber: 21\n        }, this), isAddedToInventory && /*#__PURE__*/_jsxDEV(\"div\", {\n          id: \"inventory_status\",\n          children: [/*#__PURE__*/_jsxDEV(\"h4\", {\n            children: \"Inventory Copies\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 29,\n            columnNumber: 29\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            id: \"noOfCopies\",\n            type: \"number\",\n            value: this.state.noOfCopies,\n            onChange: this.handleChange,\n            min: \"1\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 30,\n            columnNumber: 29\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 28,\n          columnNumber: 25\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 20,\n        columnNumber: 17\n      }, this), cardFooter]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 19,\n      columnNumber: 13\n    }, this);\n  }\n\n  handleChange(e) {\n    this.setState({\n      noOfCopies: e.target.value\n    });\n  }\n\n}","map":{"version":3,"sources":["C:/Users/User/books_inventory/src/BookCard.js"],"names":["React","url","BookCard","Component","constructor","props","generateCardFooter","isAddedToInventory","updateInventory","removeFromInventory","addToInventory","fetch","method","headers","body","JSON","stringify","then","response","json","setState","noOfCopies","book","state","data","getAuthorsList","authors","map","author","handleChange","bind","render","cardFooter","bookTitle","publishedDate","e","target","value"],"mappings":"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","sourcesContent":["import React from 'react';\r\n\r\nconst url = \"https://book-store-service.herokuapp.com/api/book/\"\r\n\r\nexport class BookCard extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            noOfCopies: props.noOfCopies\r\n        }\r\n        this.handleChange = this.handleChange.bind(this);\r\n    }\r\n\r\n    render() {\r\n        var book = this.props; \r\n        var isAddedToInventory = this.state.noOfCopies != 0;\r\n        var cardFooter = this.generateCardFooter(isAddedToInventory);\r\n        return(\r\n            <div className=\"card_wrapper\">\r\n                <div id=\"card_body\">\r\n                    <div id=\"book_info\">\r\n                        <h3 id=\"header_container\">{book.bookTitle}</h3>\r\n                        <h4>Authors:</h4>\r\n                        {this.getAuthorsList()}\r\n                        <h4>Published Date:</h4>{book.publishedDate}\r\n                    </div>\r\n                    {isAddedToInventory && \r\n                        <div id=\"inventory_status\">\r\n                            <h4>Inventory Copies</h4>\r\n                            <input id=\"noOfCopies\" type=\"number\" value={this.state.noOfCopies} \r\n                                onChange={this.handleChange} min=\"1\" />\r\n                        </div>}\r\n                </div>\r\n                {cardFooter}\r\n            </div>\r\n        )\r\n    }\r\n\r\n    generateCardFooter = (isAddedToInventory) => {\r\n        if(isAddedToInventory) {\r\n            return (\r\n                <div id=\"card_footer\">\r\n                    <button onClick={this.updateInventory}> Save </button>\r\n                    <button onClick={this.props.removeFromInventory}> Remove All Copies </button>   \r\n                </div>\r\n            )\r\n        } else return (\r\n            <div id=\"card_footer\">\r\n                <button onClick={this.addToInventory}> Add to Inventory </button>\r\n                <p> No copies currently in the Inventory </p>   \r\n            </div>\r\n        )\r\n    }\r\n\r\n    handleChange(e) {\r\n        this.setState({ noOfCopies: e.target.value });\r\n    }\r\n\r\n    addToInventory =()=> {\r\n\r\n        fetch(url, {\r\n            method: 'POST',\r\n            headers: {'Content-type':'application/json'},\r\n            body: JSON.stringify(this.props)\r\n        }).then((response) => response.json())\r\n          .then(() => { this.setState({ noOfCopies: 1 }) });\r\n    }\r\n\r\n    updateInventory =()=> {\r\n        var book = this.props;\r\n        book.noOfCopies = this.state.noOfCopies;\r\n        \r\n        fetch(url, {\r\n            method: 'PUT',\r\n            headers: {'Content-type':'application/json'},\r\n            body: JSON.stringify(book)\r\n        }).then((response) => response.json())\r\n          .then((data) => { this.setState({ noOfCopies: data.noOfCopies }) });\r\n    }\r\n\r\n    getAuthorsList=()=> {\r\n        var authors = this.props.authors;\r\n        if (authors != null) {\r\n            return(\r\n                <ul>{authors.map(author => {\r\n                    return <li key={author}>{author}</li>\r\n                    })}\r\n                </ul>\r\n            )\r\n        }\r\n    }\r\n\r\n}"]},"metadata":{},"sourceType":"module"}