{"version":3,"sources":["Inventory.js","SearchInventory.js","BookCard.js","ListBookCards.js","index.js"],"names":["Inventory","props","onClick","this","onSearch","React","Component","SearchInventory","state","searchString","handleChange","bind","handleSubmit","e","onInventorySearch","setState","target","value","onSubmit","id","onChange","url","BookCard","generateCardFooter","isAddedToInventory","book","bookId","bookTitle","authors","publishedDate","removeFromInventory","noOfCopies","updateInventory","addToInventory","fetch","method","headers","body","JSON","stringify","then","response","json","data","concat","text","toggleInventoryStatus","getAuthorsList","map","author","cardFooter","className","type","min","ListBookCards","renderList","dataList","BookStore","getAllInventoryBooks","Method","items","handleInventorySearch","preventDefault","length","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.3f16f903.chunk.js","sourcesContent":["import React from 'react';\r\n\r\nclass Inventory extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n    }\r\n\r\n    render() {\r\n        return(<button onClick={this.props.onSearch}> Inventory </button>);\r\n    }\r\n}\r\n\r\nexport default Inventory;","import React from 'react';\r\n\r\nexport class SearchInventory extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = { searchString: '' }\r\n        this.handleChange = this.handleChange.bind(this);\r\n        this.handleSubmit = this.handleSubmit.bind(this);\r\n    }\r\n\r\n    handleSubmit(e) {\r\n        this.props.onInventorySearch(e, this.state.searchString);\r\n    }\r\n\r\n    handleChange(e) {\r\n        this.setState({ searchString: e.target.value });\r\n    }\r\n\r\n    render() {\r\n        return (\r\n        <form onSubmit={this.handleSubmit}>\r\n            <input id=\"book-search\" onChange={this.handleChange} value={this.state.searchString} />\r\n            <button id=\"book-search\">\r\n              Search\r\n            </button>\r\n        </form>);\r\n    }\r\n}","import React from 'react';\r\n\r\nconst url = \"https://book-store-service.herokuapp.com/api/book/\"\r\n\r\nexport class BookCard extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            noOfCopies: props.noOfCopies\r\n        }\r\n        this.handleChange = this.handleChange.bind(this);\r\n    }\r\n\r\n    render() { \r\n        var isAddedToInventory = this.state.noOfCopies != 0;\r\n        var cardFooter = this.generateCardFooter(isAddedToInventory);\r\n        return(\r\n            <div className=\"card_wrapper\">\r\n                <div id=\"card_body\">\r\n                    <div id=\"book_info\">\r\n                        <h3 id=\"header_container\">{this.props.bookTitle}</h3>\r\n                        <h4>Authors:</h4>\r\n                        {this.getAuthorsList()}\r\n                        <h4>Published Date:</h4>{this.props.publishedDate}\r\n                    </div>\r\n                    {isAddedToInventory && \r\n                        <div id=\"inventory_status\">\r\n                            <h4>Inventory Copies</h4>\r\n                            <input id=\"noOfCopies\" type=\"number\" value={this.state.noOfCopies} \r\n                                onChange={this.handleChange} min=\"1\" />\r\n                        </div>}\r\n                </div>\r\n                {cardFooter}\r\n            </div>\r\n        )\r\n    }\r\n\r\n    generateCardFooter = (isAddedToInventory) => {\r\n        var book = {\r\n            bookId: this.props.bookId,\r\n            bookTitle: this.props.bookTitle,\r\n            authors: this.props.authors,\r\n            publishedDate: this.props.publishedDate,\r\n            removeFromInventory: this.props.removeFromInventory,\r\n            noOfCopies: this.props.noOfCopies\r\n        }\r\n        if(isAddedToInventory) {\r\n            return (\r\n                <div id=\"card_footer\">\r\n                    <button onClick={this.updateInventory.bind(this, book)}> Save </button>\r\n                    <button onClick={this.removeFromInventory.bind(this, book.bookId)}> \r\n                        Remove All Copies </button>   \r\n                </div>\r\n            )\r\n        } else return (\r\n            <div id=\"card_footer\">\r\n                <button onClick={this.addToInventory.bind(this, book)}> Add to Inventory </button>\r\n                <p> No copies currently in the Inventory </p>   \r\n            </div>\r\n        )\r\n    }\r\n\r\n    handleChange(e) {\r\n        this.setState({ noOfCopies: e.target.value });\r\n    }\r\n\r\n    addToInventory = (book)=> {\r\n        book.noOfCopies = 1;\r\n        fetch(url, {\r\n            method: 'POST',\r\n            headers: {'Content-type':'application/json'},\r\n            body: JSON.stringify(book)\r\n        }).then((response) => response.json())\r\n          .then(() => { this.setState({ noOfCopies: 1 }) });\r\n    }\r\n\r\n    updateInventory =(book)=> {\r\n        book.noOfCopies = this.state.noOfCopies;\r\n        fetch(url, {\r\n            method: 'PUT',\r\n            headers: {'Content-type':'application/json'},\r\n            body: JSON.stringify(book)\r\n        }).then((response) => response.json())\r\n          .then((data) => { this.setState({ noOfCopies: data.noOfCopies }) });\r\n    }\r\n\r\n    removeFromInventory =(bookId) => {\r\n        fetch(url.concat(bookId), {\r\n            method: 'DELETE',\r\n            headers: {'Content-type':'application/json'}\r\n        }).then((response) => response.text())\r\n          .then(this.setState({noOfCopies: 0}));\r\n    }\r\n\r\n    toggleInventoryStatus=(bookId)=>{\r\n        this.props.removeFromInventory.bind(this, bookId)\r\n    }\r\n\r\n    getAuthorsList=()=> {\r\n        var authors = this.props.authors;\r\n        if (authors != null) {\r\n            return(\r\n                <ul>{authors.map(author => {\r\n                    return <li key={author}>{author}</li>\r\n                    })}\r\n                </ul>\r\n            )\r\n        }\r\n    }\r\n\r\n}","import React from 'react';\r\nimport { BookCard } from './BookCard';\r\n\r\nconst url = \"https://book-store-service.herokuapp.com/api/book/\"\r\n\r\nexport class ListBookCards extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n    }\r\n\r\n    renderList = ({dataList}) => {\r\n        if(dataList){\r\n            return dataList.map(book => {\r\n                return(<BookCard key={book.bookId} {...book} />)\r\n            })\r\n        }\r\n    }\r\n\r\n    render() {\r\n        return this.renderList(this.props);\r\n    }\r\n}","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport Inventory from './Inventory.js';\r\nimport './index.css';\r\nimport { SearchInventory } from './SearchInventory.js';\r\nimport { ListBookCards } from './ListBookCards.js';\r\n\r\nconst url = \"https://book-store-service.herokuapp.com/api/\"\r\n\r\nclass BookStore extends React.Component {\r\n    constructor(props) {\r\n      super(props);\r\n      this.state = { items: [] };\r\n    }\r\n\r\n    componentDidMount(){\r\n        this.getAllInventoryBooks();\r\n    }\r\n\r\n    getAllInventoryBooks = () => {\r\n        fetch(url.concat(\"book\"), {\r\n            Method: 'GET'})\r\n            .then((response) => response.json())\r\n            .then((data) => {\r\n                this.setState({items: data})\r\n            });\r\n    }\r\n\r\n    render() {\r\n      return (\r\n          <div>\r\n            <div id=\"header_container\">\r\n                <h1>BOOK STORE</h1>\r\n                <div id=\"search_container\">\r\n                    <Inventory onSearch={this.getAllInventoryBooks}/>\r\n                    <SearchInventory onInventorySearch={this.handleInventorySearch}/>\r\n                </div>\r\n            </div>\r\n            <ListBookCards dataList={this.state.items} />\r\n          </div>\r\n      );\r\n    }\r\n  \r\n    handleInventorySearch = (e, searchString) => {\r\n      e.preventDefault();\r\n      if (searchString.length === 0) {\r\n        return;\r\n      }\r\n\r\n      fetch(url.concat(searchString), {\r\n        Method: 'GET'})\r\n        .then((response) => response.json())\r\n        .then((data) => {\r\n            this.setState({items: data})\r\n        });\r\n    }\r\n  }\r\n  \r\n  ReactDOM.render(\r\n    <BookStore />,\r\n    document.getElementById('root')\r\n  );"],"sourceRoot":""}